Paraphrase and Semantic Similarity in Tweets

Prathyusha Jwalapuram (201225005)
Jitta Divya Sai (201225167)

Please note that the quotes are not part of the filenames.

Feature Extraction

Note: The program requires stanford parser to be installed in the same folder. You may need to change the name of the stanford parser folder in the code depending on the date of installation and version. Python library for nltk must also be installed along with the required wordnet corpora.

Filename: code.py

python code.py "training data" > (redirect output to another file)

Returns feature vector followed by True/False tag. The feature vectors are based on common word alignment (assisted by wordnet synsets), dependency relations between common words, and phrase chunk similarities. 

The output of this file forms the input for the following training files. The same code is used to extract testing input from development data, but the tags are stripped (manually). The training input data and the stripped development data, along with the correct tags have been uploaded. The files are:

Training file (output from this code, input for the following codes): 3-dtrain.txt
Development input data: 3-dDEV.txt
Correct Tags for Development Data: devA.txt


Training and Testing classifier

Requirements:
Numpy module
pylab

Linear Perceptron Algorithm:
Filename : me3d.py
python me3d.py  "training file"
On running this, it will create a new file (a_vec.txt) and the final coefficient vector is written into that.

Filename : check.py
python check.py "testing file" a_vec.txt

Nearest Neighbour Algorithm
Filename : new_algo.py 
python new_algo.py "training file"
The output will be 2 vectors (The two means of the respective "true" class and  "false" class will be generated).
Currently,These two vectors should be copied into the new_algo_test.py code as "meanT" and "meanF".
Then run the code.
Filename : new_algo_test.py
python new_algo_test.py

Nearest Neighbour with considering  a set of samples ,among which some of them can be the support vectors
Filename : extension.py
python extension.py "training file"
generates a 2 sets of feature vectors.(1st one belongs to "true" class and 2nd to the "false" class)
Copy these into the extension_test.py as "lst1" and "lst2" and also copy the means generated by running "new_algo.py" as "meanT" and "meanF".
Filename: extension_test.py
python extension_test.py "testing file"


